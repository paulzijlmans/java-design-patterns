Facade

Concepts
- Make an API easier to use
- Reduce dependencies on outside code
- Simplify the interface or client usage
- Usually a refactoring pattern
- Examples:
  ▪ java.net.URL
  ▪ javax.faces.context.FacesContext

Design
- Class that utilizes composition
- Shouldn’t have a need for inheritance
- Typically encompasses full lifecycle

Pitfalls
- Typically used to clean up code
- Should think about API design
- Flat problem/structure
- The “Singleton” of Structural Pattern

Summary
- Simplifies Client Interface
- Easy Pattern to implement
- Refactoring Pattern
